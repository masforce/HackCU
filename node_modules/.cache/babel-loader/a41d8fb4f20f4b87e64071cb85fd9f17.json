{"ast":null,"code":"import _classCallCheck from \"/Users/masforce/IdeaProjects/HackCU/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/masforce/IdeaProjects/HackCU/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/masforce/IdeaProjects/HackCU/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/masforce/IdeaProjects/HackCU/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/masforce/IdeaProjects/HackCU/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/masforce/IdeaProjects/HackCU/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/masforce/IdeaProjects/HackCU/src/Button_Tutorial.js\";\nimport React, { Component } from 'react';\nimport Button from 'reactstrap/es/Button';\nimport Input from 'reactstrap/es/Input';\n\nvar Button_Tutorial =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Button_Tutorial, _Component);\n\n  function Button_Tutorial(props) {\n    var _this;\n\n    _classCallCheck(this, Button_Tutorial);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Button_Tutorial).call(this, props));\n    _this.state = {\n      selectedOption: \"default\",\n      button_color: \"secondary\",\n      message: \"\",\n      button_text: \"I am a Button! Edit Me!\"\n    };\n    _this.handleOptionChange = _this.handleOptionChange.bind(_assertThisInitialized(_this));\n    _this.update_button_text = _this.update_button_text.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Button_Tutorial, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"BUTTONS\"), React.createElement(Button, {\n        color: this.state.button_color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.state.button_text), React.createElement(Input, {\n        type: \"text\",\n        onChange: this.update_button_text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"red\",\n        checked: this.state.selectedOption === 'red',\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), \"RED\")), React.createElement(\"div\", {\n        className: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"green\",\n        checked: this.state.selectedOption === 'green',\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), \"GREEN\")), React.createElement(\"div\", {\n        className: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"blue\",\n        checked: this.state.selectedOption === 'blue',\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), \"BLUE\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.state.message)));\n    }\n  }, {\n    key: \"update_button_text\",\n    value: function update_button_text(event) {\n      this.setState({\n        button_text: event.target.value\n      });\n    }\n  }, {\n    key: \"handleOptionChange\",\n    value: function handleOptionChange(changeEvent) {\n      var color = \"\";\n      var message = \"\";\n\n      switch (changeEvent.target.value) {\n        case \"red\":\n          color = \"danger\";\n          message = \"<Button color='danger'>\".concat(this.state.button_text, \"</Button>\");\n          break;\n\n        case \"green\":\n          color = \"success\";\n          message = \"<Button color='success'>\".concat(this.state.button_text, \"</Button>\");\n          break;\n\n        case \"blue\":\n          color = \"primary\";\n          message = \"<Button color='primary'>\".concat(this.state.button_text, \"</Button>\");\n          break;\n\n        default:\n          color = \"secondary\";\n      }\n\n      this.setState({\n        selectedOption: changeEvent.target.value,\n        button_color: color,\n        message: message\n      });\n    }\n  }]);\n\n  return Button_Tutorial;\n}(Component);\n\nexport { Button_Tutorial as default };","map":{"version":3,"sources":["/Users/masforce/IdeaProjects/HackCU/src/Button_Tutorial.js"],"names":["React","Component","Button","Input","Button_Tutorial","props","state","selectedOption","button_color","message","button_text","handleOptionChange","bind","update_button_text","event","setState","target","value","changeEvent","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from 'reactstrap/es/Button';\nimport Input from 'reactstrap/es/Input';\n\nexport default class Button_Tutorial extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedOption: \"default\",\n      button_color: \"secondary\",\n      message: \"\",\n      button_text: \"I am a Button! Edit Me!\"\n    };\n\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    this.update_button_text = this.update_button_text.bind(this);\n  }\n\n  render() {\n    return (\n        <div>\n          <h1>BUTTONS</h1>\n          <Button color={this.state.button_color}>{this.state.button_text}</Button>\n          <Input type=\"text\" onChange={this.update_button_text}/>\n          <form>\n            <div className=\"radio\">\n              <label>\n                <input type=\"radio\" value=\"red\" checked={this.state.selectedOption === 'red'} onChange={this.handleOptionChange} />\n                RED\n              </label>\n            </div>\n            <div className=\"radio\">\n              <label>\n                <input type=\"radio\" value=\"green\" checked={this.state.selectedOption === 'green'} onChange={this.handleOptionChange}/>\n                GREEN\n              </label>\n            </div>\n            <div className=\"radio\">\n              <label>\n                <input type=\"radio\" value=\"blue\" checked={this.state.selectedOption === 'blue'} onChange={this.handleOptionChange}/>\n                BLUE\n              </label>\n            </div>\n            <div>\n              {this.state.message}\n            </div>\n          </form>\n        </div>\n    );\n  }\n\n  update_button_text(event) {\n    this.setState({button_text: event.target.value}) ;\n  }\n\n  handleOptionChange(changeEvent) {\n    let color = \"\";\n    let message = \"\";\n    switch(changeEvent.target.value) {\n      case \"red\":\n        color = \"danger\";\n        message = `<Button color='danger'>${this.state.button_text}</Button>`;\n        break;\n      case \"green\":\n        color = \"success\";\n        message = `<Button color='success'>${this.state.button_text}</Button>`;\n        break;\n      case \"blue\":\n        color = \"primary\";\n        message = `<Button color='primary'>${this.state.button_text}</Button>`;\n        break;\n      default:\n        color = \"secondary\";\n    }\n    this.setState({\n      selectedOption: changeEvent.target.value,\n      button_color: color,\n      message: message\n    });\n  }\n}"]},"metadata":{},"sourceType":"module"}