{"ast":null,"code":"import _classCallCheck from \"/Users/masforce/IdeaProjects/HackCU/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/masforce/IdeaProjects/HackCU/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/masforce/IdeaProjects/HackCU/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/masforce/IdeaProjects/HackCU/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/masforce/IdeaProjects/HackCU/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/masforce/IdeaProjects/HackCU/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/masforce/IdeaProjects/HackCU/src/App.js\";\nimport React, { Component } from 'react';\nimport { Button, Container, Row, Col, Pane, Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport './App.css';\nimport Alert_Tutorial from \"./Alert_Tutorial\";\nimport Button_Tutorial from \"./Button_Tutorial\";\nimport Slider_Tutorial from \"./Slider_Tutorial\";\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props));\n    _this.updateState = _this.updateState.bind(_assertThisInitialized(_this));\n    _this.update = _this.update.bind(_assertThisInitialized(_this));\n    _this.changeBackground = _this.changeBackground.bind(_assertThisInitialized(_this));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: false,\n      username: 'And your name is...?',\n      value: '',\n      stylePath: './index2.css'\n    };\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        type: \"text/css\",\n        href: \"index.css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Navbar, {\n        style: {\n          backgroundColor: \"#edf1f7\",\n          boxShadow: '0px 0px 8px'\n        },\n        light: true,\n        expand: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(NavbarBrand, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Hack CU\")), React.createElement(NavbarToggler, {\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"/components/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Components\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"https://github.com/reactstrap/reactstrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"GitHub\")), React.createElement(UncontrolledDropdown, {\n        nav: true,\n        inNavbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        nav: true,\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Options\"), React.createElement(DropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Option 1\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Option 2\"), React.createElement(DropdownItem, {\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Reset\")))))), React.createElement(\"div\", {\n        id: \"content\",\n        style: {\n          backgroundColor: this.state.background\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"enterName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"80%\",\n          margin: \"auto\",\n          padding: \"20px\"\n        },\n        type: \"text\",\n        placeholder: \"(enter your username here)\",\n        value: this.state.value,\n        onChange: this.update,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Button, {\n        style: {\n          width: \"20%\"\n        },\n        onClick: this.updateState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.username), React.createElement(\"div\", {\n        id: \"forum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"See what parts of this site you can change:\"), React.createElement(Button, {\n        style: {\n          width: \"20%\"\n        },\n        onClick: this.updateBackground,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Change Background\"), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Text Area\"), React.createElement(Input, {\n        type: \"textarea\",\n        name: \"text\",\n        id: \"exampleText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Button_Tutorial, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Alert_Tutorial, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Slider_Tutorial, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"update\",\n    value: function update(e) {\n      this.state.value = e.target.value;\n      this.setState({\n        value: e.target.value\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState() {\n      if (this.state.value != \"\") {\n        this.setState({\n          username: 'Nice to meet you, ' + this.state.value + '!'\n        });\n        this.setState({\n          value: \"\"\n        });\n      } else {\n        this.setState({\n          username: 'You didn\\'t type anything.'\n        });\n        this.setState({\n          value: \"\"\n        });\n      }\n    }\n  }, {\n    key: \"changeBackground\",\n    value: function changeBackground() {\n      this.setState({\n        background: '#ffff'\n      });\n    }\n  }]);\n\n  return Example;\n}(React.Component); //export default App;\n\n\nexport { Example as default };","map":{"version":3,"sources":["/Users/masforce/IdeaProjects/HackCU/src/App.js"],"names":["React","Component","Button","Container","Row","Col","Pane","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Form","FormGroup","Label","Input","FormText","Alert_Tutorial","Button_Tutorial","Slider_Tutorial","Example","props","updateState","bind","update","changeBackground","toggle","state","isOpen","username","value","stylePath","setState","backgroundColor","boxShadow","background","width","margin","padding","updateBackground","e","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Button, Container, Row, Col, Pane, Collapse,\n    Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Form, FormGroup, Label, Input, FormText} from 'reactstrap';\nimport './App.css';\nimport Alert_Tutorial from \"./Alert_Tutorial\";\nimport Button_Tutorial from \"./Button_Tutorial\";\nimport Slider_Tutorial from \"./Slider_Tutorial\";\n\nexport default class Example extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateState = this.updateState.bind(this);\n        this.update = this.update.bind(this);\n        this.changeBackground = this.changeBackground.bind(this);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false,\n            username: 'And your name is...?',\n            value: '',\n            stylePath: './index2.css'\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n  render() {\n    return (\n            <div>\n            <link rel=\"stylesheet\" type=\"text/css\" href='index.css' />\n            <Navbar style={{backgroundColor: \"#edf1f7\", boxShadow: '0px 0px 8px'}} light expand=\"md\">\n                <NavbarBrand href=\"/\"><h1>Hack CU</h1></NavbarBrand>\n                <NavbarToggler onClick={this.toggle} />\n                <Collapse isOpen={this.state.isOpen} navbar>\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavItem>\n                            <NavLink href=\"/components/\">Components</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\n                        </NavItem>\n                        <UncontrolledDropdown nav inNavbar>\n                            <DropdownToggle nav caret>\n                                Options\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem>\n                                    Option 1\n                                </DropdownItem>\n                                <DropdownItem>\n                                    Option 2\n                                </DropdownItem>\n                                <DropdownItem divider />\n                                <DropdownItem>\n                                    Reset\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n            <div id=\"content\" style={{backgroundColor: this.state.background}}>\n\n\n                <div id=\"enterName\">\n\n                    <Input style={{width:\"80%\", margin:\"auto\", padding:\"20px\"}} type={\"text\"} placeholder=\"(enter your username here)\" value={this.state.value} onChange={this.update} />\n                    <Button style={{width:\"20%\"}} onClick={this.updateState}>Submit</Button>\n\n                </div>\n\n                <h1>{this.state.username}</h1>\n                <div id=\"forum\">\n                    <h2>See what parts of this site you can change:</h2>\n                    <Button style={{width:\"20%\"}} onClick={this.updateBackground}>Change Background</Button>\n                        <Form>\n                            <FormGroup>\n                                <Label for=\"exampleText\">Text Area</Label>\n                                <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n                            </FormGroup>\n                        </Form>\n                    <Container>\n                        <Button_Tutorial/>\n                        <Alert_Tutorial/>\n                        <Slider_Tutorial/>\n                    </Container>\n                </div>\n            </div>\n            </div>\n    );\n  }\n\n    update(e) {\n\n        this.state.value = e.target.value;\n        this.setState({value: e.target.value});\n\n    }\n\n    updateState() {\n        if (this.state.value != \"\") {\n            this.setState({username: 'Nice to meet you, ' + this.state.value + '!'});\n            this.setState({value: \"\"});\n        }\n        else {\n            this.setState({username: 'You didn\\'t type anything.'});\n            this.setState({value: \"\"});\n        }\n    }\n\n    changeBackground() {\n        this.setState({background: '#ffff'});\n    }\n\n\n\n}\n\n//export default App;\n"]},"metadata":{},"sourceType":"module"}